{"name":"Collect.js","tagline":"MapReduce Utility","body":"# collect.js\r\n\r\nMapReduce Utility\r\n\r\n## What\r\nUtility that calls one or more `map()` and `reduce()` functions over a series of\r\ndata.\r\n\r\n## Install\r\n\r\n```shell\r\nnpm install mattsacks/collect.js\r\nbower install mattsacks/collect.js\r\n```\r\n\r\n## Setup\r\nOnly the `collect()` function is exposed.\r\n\r\nIn node:\r\n\r\n```javascript\r\nvar collect = require('collect');\r\n```\r\n\r\nIn the browser:\r\n\r\n```html\r\n<body>\r\n  ...\r\n  <script src=\"collect.min.js\"></script>\r\n</body>\r\n```\r\n\r\n## Docs\r\n\r\n`collect(data, maps[, options])`\r\n\r\nThe main function, it takes in a dataset and over each item, it runs a `map` and\r\n`reduce` function found for each key in `maps`.\r\n\r\n* `data` (Array, Object): A series of data to run `map` and `reduce`\r\n  functions on.\r\n* `maps` (Object): An object with either a top-level `map` and/or `reduce`\r\n  function defined, or a `map` and/or `reduce` function defined for each key.\r\n* `options` (_optional_ Object): a hash of options. Currently unused.\r\n\r\n## Example\r\n```javascript\r\nvar data = [0, 1, 2];\r\n\r\nvar maps = {\r\n  plusOne: {\r\n    map: function(x, i) {\r\n      return x + 1;\r\n    }\r\n  },\r\n  sum: {\r\n    reduce: function(result, current, x, i) {\r\n      return result == null ? current : result + current;\r\n    }\r\n  }\r\n};\r\n\r\ncollect(data, maps); // { plusOne: [1, 2, 3], sum: 3 }\r\n\r\nmaps.plusOneSum = {\r\n  map: maps.plusOne.map,\r\n  reduce: function(result, current) {\r\n    return result + current;\r\n  },\r\n  init: 0 // initial value for result\r\n};\r\n\r\ncollect(data, maps); // { plusOne: [1, 2, 3], sum: 3, plusOneSum: 6 }\r\ncollect(data, maps.plusOneSum); // 6\r\n```\r\n\r\n## Advanced\r\n\r\n#### Reduce mapped data in other maps\r\n```javascript\r\nvar data = [0, 1, 2];\r\n\r\n// Reference existing maps within \r\nvar maps = {\r\n  plusOne: {\r\n    map: function(x) {\r\n      return x + 1;\r\n    }\r\n  },\r\n  sum: {\r\n    data: 'plusOne',\r\n    reduce: function(result, current) {\r\n      return result + current;\r\n    },\r\n    init: 0\r\n  },\r\n  times: {\r\n    data: 'plusOne',\r\n    reduce: function(result, current) {\r\n      return result * current;\r\n    },\r\n    init: 1\r\n  }\r\n};\r\n\r\ncollect(data, maps); // { plusOne: [1, 2, 3], sum: 6, times: 6 };\r\n```\r\n\r\n#### Context inside of maps\r\n```javascript\r\nvar data = [0, 1, 2];\r\n\r\n// Reference existing maps within \r\nvar maps = {\r\n  plusOne: {\r\n    map: function(x) {\r\n      return x + 1;\r\n    }\r\n  },\r\n  arrays: {\r\n    data: 'plusOne',\r\n    reduce: function(result, current) {\r\n      result.push(this);\r\n      return result;\r\n    },\r\n    init: []\r\n  }\r\n};\r\n\r\ncollect(data, maps);\r\n// {\r\n//   plusOne: [1, 2, 3],\r\n//   arrays: [[1, 2, 3], [1, 2, 3], [1, 2, 3]]\r\n// }\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}